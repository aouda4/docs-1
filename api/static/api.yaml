openapi: 3.0.0
info:
  title: Open Inventory API
  version: 0.0.1
  contact:
    name: openinventoryorg
    email: openinventorysystem@gmail.com
  license:
    name: MIT
  description: This is the api endpoint documentation for Open Inventory project - an inventory management application created specifically for computer labs.
servers:
  - url: 'http://openinventory.org'
paths:
  /api/login:
    post:
      summary: Login using credentials
      tags:
        - Login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT Token for the user
                  user:
                    $ref: '#/components/schemas/User'
                required:
                  - token
              examples:
                example:
                  value:
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjZjMzYzYTBiLTZhNjQtNDY5YS1iMDk4LTkyNTE1NzMzYTE2MyIsImZpcnN0TmFtZSI6IlN1bmVyYSIsImxhc3ROYW1lIjoiQXZpbmFzaCIsImVtYWlsIjoia2RzdW5lcmFhdmluYXNoQGdtYWlsLmNvbSIsInBlcm1pc3Npb25zIjpbIlJFUVVFU1RFUiJdLCJyb2xlIjoiU3R1ZGVudCIsInJvbGVJZCI6IjllN2NhYzA5LTJhYjMtNGQ3MC1iYTU4LWZhMTY1ZjhjYjQwMSIsImlhdCI6MTU4MzU5ODY5OX0.zvKDWbLZmxXKzBsvb_JF4pWiJyae15yEtux0pqvkM3g
                    user:
                      id: 6c363a0b-6a64-469a-b098-92515733a163
                      firstName: Sunera
                      lastName: Avinash
                      email: kdsuneraavinash@gmail.com
                      permissions:
                        - REQUESTER
                      role: Student
                      roleId: 9e7cac09-2ab3-4d70-ba58-fa165f8cb401
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: "Email isn't registered in the system"
      operationId: get-api-login
      description: |-
        Login a user using email and password.
        > Required Permission Level: notLoggedIn
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
            examples:
              example:
                value:
                  email: admin@admin.com
                  password: password
        description: ''
  /api/registration/register:
    post:
      summary: Register an account
      operationId: post-api-registration-register
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: '"firstName" is required'
      description: |-
        Registers a user using the given token and details
        > Required Permission Level: notLoggedIn
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                password:
                  type: string
              required:
                - token
                - firstName
                - lastName
                - password
            examples:
              example:
                value:
                  token: pS_xf6FnP8T53sdX4Gw-J7s9.QfOlswnII9zfpIZAOqRj5bLXTI~kMsUe6yDH0JDnXzNTIDJJsQFscmAmDrGotie5G3I9Q_X
                  firstName: Demo
                  lastName: User
                  password: password
        description: ''
      tags:
        - Registration
  '/api/registration/verify/{token}':
    get:
      summary: Verify Registration Token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    description: Email Address of the token owner
                    format: email
                  roleId:
                    type: string
                    description: Role Id of the token owner
                    format: uuid
                  Role:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        description: Role name of the given token
                required:
                  - email
                  - roleId
                  - Role
              examples:
                example:
                  value:
                    email: admin@admin.com
                    roleId: beb4667e-20a5-4bc9-b2f5-5c9d1df1be55
                    Role:
                      name: Administrator
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Invalid token
      operationId: get-api-registration-verify
      description: |-
        Verify whether the registration token is valid. If valid returns email and assigned role.
        > Required Permission Level: notLoggedIn
      tags:
        - Registration
    parameters:
      - schema:
          type: string
        name: token
        in: path
        required: true
        description: Registration token of the user
  /api/registrar/roles:
    get:
      summary: List all available roles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
              examples:
                example:
                  value:
                    roles:
                      - id: 375840ad-2df8-45c9-aff7-eea54371487c
                        name: REQUESTER
                      - id: 40d1d03b-8305-45c3-ab9c-4d6c56022976
                        name: ADMINISTRATOR
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions
      operationId: get-api-list-roles
      description: |-
        List all the roles
        > Required Permission Level: REGISTRAR
      tags:
        - Registrar
      security:
        - token: []
    parameters: []
  /api/registrar/token:
    put:
      summary: Create invite token for an email
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: '"role" must be a valid GUID'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions
      operationId: get-api-registrar-token-generate
      description: |-
        Theis sends a request to generate a token for a specified address to create new account on the provided role. If the account is already created or if there is an already pending invite, this will also send an error status.
        > Required Permission Level: REGISTRAR
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requests:
                  $ref: '#/components/schemas/Registration-Role-Assign'
            examples:
              example:
                value:
                  email: user@gmail.com
                  role: 42647147-69d2-4c2b-8c3b-d3cc30dfdd97
        description: ''
      security:
        - token: []
      tags:
        - Registrar
    parameters: []
    delete:
      summary: Delete invite token for an email
      operationId: delete-api-registrar-token
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: User user@gmail.com is not sent an invitation link or ther user has created a account.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions
      description: |-
        Theis sends a request to delete a token for a specified address. If the account is already created or if there isn't an already pending invite, this will also send an error status.
        > Required Permission Level: REGISTRAR
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
            examples:
              example:
                value:
                  email: gayal@gmail.com
        description: ''
      tags:
        - Registrar
    post:
      summary: Create invitation tokens for a list of emails
      operationId: post-api-registrar-token
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: User user2@gmail.com is already sent an invitation link or account already created
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions
      description: |-
        Theis sends a request to generate **tokens** for a specified addresses to create new accounts on the provided role. If the account is already created or if there is an already pending invite, this will also send an error status and no tokens will be generated.

        Note: Email sending won't be monitored.

        > Required Permission Level: REGISTRAR
      tags:
        - Registrar
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  format: uuid
                  description: Role ID to assign
                emails:
                  type: array
                  minItems: 1
                  description: List of emails to send tokens
                  items:
                    type: string
              required:
                - emails
                - role
              description: ''
            examples:
              example:
                value:
                  emails:
                    - user2@gmail.com
                    - instructor@gmail.com
                  role: 1a706073-2bec-4a58-84df-b7bf1ce7682a
    get:
      summary: List all tokens
      operationId: get-api-registrar-token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tokens:
                    type: array
                    items:
                      type: object
                      description: Token
                      properties:
                        email:
                          type: string
                          format: email
                          description: Email address
                        valid:
                          type: boolean
                          description: Whether the token was accepted or not
                        Role:
                          type: object
                          required:
                            - id
                            - name
                          description: Information of the role assigned
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: ID of the role
                            name:
                              type: string
                              description: Name of the role
                        updatedAt:
                          type: string
                          format: date-time
                          description: Last updated time
                      required:
                        - email
                        - valid
                        - Role
                        - updatedAt
                required:
                  - tokens
              examples:
                example:
                  value:
                    tokens:
                      - email: supun@gmail.com
                        valid: true
                        updatedAt: '2020-03-27T21:12:39.063Z'
                        Role:
                          id: 1a706073-2bec-4a58-84df-b7bf1ce7682a
                          name: instructor
                      - email: instructor@gmail.com
                        valid: true
                        updatedAt: '2020-03-27T20:41:12.766Z'
                        Role:
                          id: 1a706073-2bec-4a58-84df-b7bf1ce7682a
                          name: instructor
                      - email: user2@gmail.com
                        valid: true
                        updatedAt: '2020-03-27T20:41:12.762Z'
                        Role:
                          id: 1a706073-2bec-4a58-84df-b7bf1ce7682a
                          name: instructor
                      - email: gayal@neomerce.com
                        valid: true
                        updatedAt: '2020-03-19T06:25:03.946Z'
                        Role:
                          id: 5dae708f-550a-48eb-a3a8-46f4f316063b
                          name: Administrator
                      - email: admin@neomerce.com
                        valid: false
                        updatedAt: '2020-03-18T21:03:09.924Z'
                        Role:
                          id: 5dae708f-550a-48eb-a3a8-46f4f316063b
                          name: Administrator
                      - email: user@gmail.com
                        valid: false
                        updatedAt: '2020-03-17T20:06:58.960Z'
                        Role:
                          id: 5dae708f-550a-48eb-a3a8-46f4f316063b
                          name: Administrator
                      - email: kdsuneraavinash@gmail.com
                        valid: false
                        updatedAt: '2020-03-12T14:28:22.194Z'
                        Role:
                          id: 8837ddee-97fc-4a5c-af02-01bf6e6eab65
                          name: Student
                      - email: admin@admin.com
                        valid: false
                        updatedAt: '2020-03-12T08:18:55.674Z'
                        Role:
                          id: 5dae708f-550a-48eb-a3a8-46f4f316063b
                          name: Administrator
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions
      description: |-
        Lists all tokens
        Note: Only the most recent 20 tokens will be sent

        > Required Permission Level: REGISTRAR
      security:
        - token: []
      tags:
        - Registrar
  '/api/labs/{id}':
    put:
      summary: Create Lab by ID
      operationId: put-api-labs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
              examples:
                example:
                  value:
                    id: 0ea2a3d3-37a4-4daf-b927-1af6d8b80201
                    title: First Lab
                    subtitle: hello world
                    updatedAt: '2020-03-14T22:48:01.969Z'
                    createdAt: '2020-03-14T22:48:01.969Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Lab 0ea2a3d3-37a4-4daf-b927-1af6d8b80201 already exists.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions
      description: |-
        This creates a lab with the given id and data. This will send an error if data is invalid or the lab already exists.
        > Required Permission Level: LAB_MANAGER
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabRequest'
            examples:
              example:
                value:
                  title: First Lab
                  subtitle: hello world
        description: ''
      tags:
        - Labs
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Id of the lab
    patch:
      summary: Update Lab Data
      operationId: patch-api-labs-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
              examples:
                example:
                  value:
                    id: 0ea2a3d3-37a4-4daf-b927-1af6d8b80201
                    title: Updated First Lab
                    subtitle: hello world
                    image: null
                    createdAt: '2020-03-14T22:48:01.969Z'
                    updatedAt: '2020-03-14T22:58:48.900Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Lab 0ea2a3d3-37a4-4daf-b927-1af6d8b8020d does not exist.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions
      description: |-
        This updates a lab with the given id and data. This will send an error if data is invalid or the lab does not exist.
        > Required Permission Level: LAB_MANAGER
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabRequest'
            examples:
              example:
                value:
                  title: First Lab
                  subtitle: hello world
          application/xml:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title of the lab
                subtitle:
                  type: string
                  description: Subtitle of the lab
                image:
                  type: string
                  format: uri
                  description: Image URL of the lab
              required:
                - title
                - subtitle
            examples:
              example:
                value:
                  title: Updated First Lab
                  subtitle: hello world
        description: ''
      tags:
        - Labs
    delete:
      summary: Delete Lab
      operationId: delete-api-labs-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Lab 0ea2a3d3-37a4-4daf-b927-1af6d8b8020d does not exist.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions
      description: |-
        This deletes a lab with the given id. This will send an error if data is invalid or the lab does not exist.
        > Required Permission Level: LAB_MANAGER
      security:
        - token: []
      tags:
        - Labs
  /api/labs/create:
    post:
      summary: Create Lab
      operationId: post-api-labs-create
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
              examples:
                example:
                  value:
                    id: 424b82a3-025c-48ad-8961-8400a0d43307
                    title: Second Lab
                    subtitle: hello world
                    image: null
                    updatedAt: '2020-03-14T23:10:32.525Z'
                    createdAt: '2020-03-14T23:10:32.525Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabRequest'
              examples:
                example:
                  value:
                    message: '"title" is required'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions
      description: |-
        Creates a new lab with the given data.
        ID will be auto assigned.
        > Required Permission Level: LABMANAGER
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabRequest'
            examples:
              example:
                value:
                  title: Second lab
                  subtitle: hello world
      tags:
        - Labs
  /api/labs/list:
    get:
      summary: List all Labs
      tags:
        - Labs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  labs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Lab'
              examples:
                example:
                  value:
                    labs:
                      - id: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                        title: microsoft lab
                        subtitle: hello world
                        image: null
                        createdAt: '2020-04-08T05:36:07.183Z'
                        updatedAt: '2020-04-08T05:36:07.183Z'
                        Users:
                          - id: 0ceeac00-e2d3-467b-8381-b38ae1d46b2e
                            firstName: Nimal
                            lastName: Perera
                            email: kamal@gmail.com
                            LabAssign:
                              labId: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                              userId: 0ceeac00-e2d3-467b-8381-b38ae1d46b2e
                              createdAt: '2020-04-08T10:41:58.049Z'
                              updatedAt: '2020-04-08T10:41:58.049Z'
                      - id: f69d4fc9-d897-47d2-8d43-d6aeae9b1682
                        title: embedded lab
                        subtitle: hello world
                        image: null
                        createdAt: '2020-04-08T10:29:33.398Z'
                        updatedAt: '2020-04-08T10:29:33.398Z'
                        Users: []
        '':
          description: ''
      operationId: get-api-labs-list
      description: |-
        Lists all labs in the system
        > Required Permission Level: loggedIn
      security:
        - token: []
  /api/login/verify:
    get:
      summary: Verify login token
      tags:
        - Login
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      operationId: get-api-login-verify
      security:
        - token: []
      description: Verifies the token used to access this endpoint. This gives 200 status if authenticated. Otherwise this gives 401 status.
  /api/permissions/list:
    get:
      summary: List all permissions
      description: |-
        Get all permissions that can be given to users
        > Required Permission Level: loggedIn
      operationId: get-api-permissions
      tags:
        - Role
      responses:
        '200':
          description: OK
      security:
        - token: []
    parameters: []
  '/api/roles/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Create Role by ID
      tags:
        - Role
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
              examples:
                example:
                  value:
                    id: 5dae708f-550a-48eb-a3a8-46f4f316063b
                    name: Administrator
                    permissions:
                      - ADMINISTRATOR
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: '"id" must be a valid GUID'
      operationId: get-api-roles-id
      description: |-
        Get the name, permission of a role of a given id
        > Required Permission Level: loggedIn
      security:
        - token: []
    patch:
      summary: Update Role by ID
      operationId: patch-api-roles-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
              examples:
                example:
                  value:
                    id: 1a706073-2bec-4a58-84df-b7bf1ce7682a
                    name: instructor
                    permissions:
                      - REGISTRAR
                      - ADMINISTRATOR
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: '"id" must be a valid GUID'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions
      description: |-
        Update the name, permission of a role of a given id.
        > Required Permission Level: ADMINISTRATOR
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
            examples:
              example:
                value:
                  name: Instructor
                  permissions:
                    - REGISTRAR
                    - ADMINISTRATOR
        description: ''
      tags:
        - Role
      security:
        - token: []
    delete:
      summary: Delete Role by ID
      operationId: delete-api-roles-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: '"id" must be a valid GUID'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions
      description: |-
        Delete the role object of a given id.
        Student/Administrator Roles cannot be deleted.
        > Required Permission Level: ADMINISTRATOR
      security:
        - token: []
      tags:
        - Role
  /api/roles/list:
    get:
      summary: List all Roles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
                required:
                  - roles
              examples:
                example:
                  value:
                    roles:
                      - id: 8837ddee-97fc-4a5c-af02-01bf6e6eab65
                        name: Student
                        RolePermissions:
                          - name: REQUESTER
                      - id: 5dae708f-550a-48eb-a3a8-46f4f316063b
                        name: Administrator
                        RolePermissions:
                          - name: ADMINISTRATOR
                      - id: 1a706073-2bec-4a58-84df-b7bf1ce7682a
                        name: instructor
                        RolePermissions:
                          - name: REGISTRAR
                          - name: ADMINISTRATOR
                      - id: eb458fcc-3eea-4d78-bb40-98b66adf80c0
                        name: instructor 2
                        RolePermissions:
                          - name: ADMINISTRATOR
      operationId: get-api-roles-list
      description: |-
        Lists all roles in the system
        > Required Permission Level: loggedIn
      tags:
        - Role
      security:
        - token: []
  /api/roles/create:
    post:
      summary: Create a new role
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
              examples:
                example:
                  value:
                    id: 1a706073-2bec-4a58-84df-b7bf1ce7682a
                    name: instructor
                    permissions:
                      - REGISTRAR
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: '"name" is required'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions
      operationId: post-api-roles-create
      description: |-
        Create a new role with name and granted permission array.
        > Required Permission Level: ADMINISTRATOR
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
            examples:
              example:
                value:
                  name: Instructor
                  permissions:
                    - REGISTRAR
        description: ''
      security:
        - token: []
      tags:
        - Role
  /api/itemsets/list:
    get:
      summary: Get Itemset list
      tags:
        - Itemset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemSet'
              examples:
                example-1:
                  value:
                    Itemsets:
                      - id: fd2851f9-4f53-4201-9d72-0e1cc168e341
                        title: periscope
                        image: 'https://mail.google.com/mail/u/0/?tab=wm&ogbl'
                        Attributes:
                          - key: rpm
                            defaultValue: null
                            editable: true
                          - key: height
                            defaultValue: 50cm
                            editable: true
                          - key: weight
                            defaultValue: 500g
                            editable: false
                      - id: 9fda6447-af9e-4ae7-91fe-89e9cbca05a1
                        title: periscript
                        image: 'https://mail.google.com/mail/u/0/?tab=wm&ogbl'
                        Attributes:
                          - key: width
                            defaultValue: 50cm
                            editable: false
                          - key: rpm
                            defaultValue: '40'
                            editable: false
                          - key: height
                            defaultValue: null
                            editable: true
                      - id: 5f9f50c8-3b77-4fd1-9232-f5fc21f3222c
                        title: resister
                        image: null
                        Attributes:
                          - key: width
                            defaultValue: 50cm
                            editable: false
                          - key: rpm
                            defaultValue: '40'
                            editable: false
                          - key: height
                            defaultValue: null
                            editable: true
      operationId: get-api-itemset-list
      description: |-
        Lists all the itemsets
        > Required Permission Level: LAB_MANAGER, INVENTORY_MANAGER
      security:
        - token: []
    parameters: []
  '/api/itemset/{id}':
    get:
      summary: Get itemset
      tags:
        - Itemset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemSet'
              examples:
                example-1:
                  value:
                    id: fd2851f9-4f53-4201-9d72-0e1cc168e341
                    title: periscope
                    image: 'https://mail.google.com/mail/u/0/?tab=wm&ogbl'
                    attributes:
                      - key: weight
                        editable: false
                        defaultValue: 500g
                      - key: height
                        editable: true
                        defaultValue: 50cm
                      - key: rpm
                        editable: true
                        defaultValue: null
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      operationId: get-api-itemset-id
      description: |-
        Get an itemset given by the id
        > Required Permission Level: LAB_MANAGER, INVENTORY_MANAGER
      security:
        - token: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    patch:
      summary: Update Itemset
      operationId: patch-api-itemset-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemSet'
              examples:
                example-1:
                  value:
                    title: transister2
                    image: null
                    attributes:
                      - key: height
                        editable: true
                        defaultValue: null
                      - key: rpm
                        editable: true
                        defaultValue: '40'
                      - key: width
                        editable: false
                        defaultValue: 50cm
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: |-
        Updates an itemset of a given id.
        > Required Permission Level: LABMANAGER, INVENTORYMANAGER
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemSet'
            examples:
              example-1:
                value:
                  title: transister2
                  image: null
                  attributes:
                    - key: height
                      editable: true
                      defaultValue: null
                    - key: rpm
                      editable: true
                      defaultValue: '40'
                    - key: width
                      editable: false
                      defaultValue: 50cm
        description: ' title should not be previously used for other itemsets.'
      tags:
        - Itemset
      security:
        - token: []
    delete:
      summary: Delete Itemset
      operationId: delete-api-itemset-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: |-
        Deletes an itemset with a given id
        > Required Permission Level: LABMANAGER, INVENTORYMANAGER
      tags:
        - Itemset
      security:
        - token: []
  /api/itemsets/create:
    post:
      summary: Create Itemset
      operationId: post-api-itemset-create
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: "Creates a new itemset based on the req body details. \n> Required Permission Level: LAB_MANAGER, INVENTORY_MANAGER"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                image:
                  type: string
                attributes:
                  type: array
                  items:
                    $ref: '#/components/schemas/attribute'
              required:
                - title
                - image
                - attributes
            examples:
              example:
                value:
                  title: transister2
                  image: null
                  attributes:
                    - key: height
                      editable: true
                      defaultValue: ''
                    - key: rpm
                      editable: true
                      defaultValue: '40'
                    - key: width
                      editable: false
                      defaultValue: 50cm
        description: ">req should contain title, image and attributes. \n>only image can be null.\n>title should be unique to this item set"
      tags:
        - Itemset
    parameters: []
  api/items/list:
    get:
      summary: List all the items
      tags:
        - Items
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    items:
                      - id: 35584289-6f39-48d4-9866-ef5d5ed8d846
                        serialNumber: '3456'
                        ItemSet:
                          id: 522f596b-9ead-460f-a8f5-42e62b8983fe
                          title: transister2
                          image: null
                        Lab:
                          id: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                          title: microsoft lab
                          subtitle: hello world
                          image: null
                      - id: bda208d8-b83b-4d88-9451-08dcd3f7aa1c
                        serialNumber: '123'
                        ItemSet:
                          id: 522f596b-9ead-460f-a8f5-42e62b8983fe
                          title: transister2
                          image: null
                        Lab:
                          id: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                          title: microsoft lab
                          subtitle: hello world
                          image: null
                      - id: 6669559a-066c-461d-99b9-edaa98e5c413
                        serialNumber: '1234'
                        ItemSet:
                          id: 522f596b-9ead-460f-a8f5-42e62b8983fe
                          title: transister2
                          image: null
                        Lab:
                          id: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                          title: microsoft lab
                          subtitle: hello world
                          image: null
        '400':
          description: Bad Request
        '':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
              examples:
                example:
                  value:
                    items:
                      - id: 35584289-6f39-48d4-9866-ef5d5ed8d846
                        serialNumber: '3456'
                        ItemSet:
                          id: 522f596b-9ead-460f-a8f5-42e62b8983fe
                          title: transister2
                          image: /dafadfdadsfa
                        Lab:
                          id: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                          title: microsoft lab
                          subtitle: hello world
                          image: null
                      - id: 12345289-6f39-48d4-9866-ef5d5ed8d846
                        serialNumber: '3456'
                        ItemSet:
                          id: 522f596b-9ead-460f-a8f5-42e62b8983fe
                          title: transister2
                          image: /dafadfdadsfa
                        Lab:
                          id: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                          title: microsoft lab
                          subtitle: hello world
                          image: null
            application/xml:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    items:
                      - id: 35584289-6f39-48d4-9866-ef5d5ed8d846
                        serialNumber: '3456'
                        ItemSet:
                          id: 522f596b-9ead-460f-a8f5-42e62b8983fe
                          title: transister2
                          image: image_link
                        Lab:
                          id: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                          title: microsoft lab
                          subtitle: hello world
                          image: null
                      - id: 11224289-6f39-48d4-9866-ef5d5ed8d846
                        serialNumber: '3496'
                        ItemSet:
                          id: 522f596b-9ead-460f-a8f5-42e62b8983fe
                          title: transister2
                          image: null
                        Lab:
                          id: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                          title: microsoft lab
                          subtitle: hello world
                          image: null
      operationId: get-items-list
      description: |-
        List all the items
        > Required Permission Level: loggedIn
      security:
        - token: []
    parameters: []
  /api/items/transfer:
    parameters: []
    post:
      summary: Transfer Items from a lab to a new lab
      operationId: postitems-transfer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    id: 35584289-6f39-48d4-9866-ef5d5ed8d846
                    labId: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
        '400':
          description: Bad Request
      description: |-
        Transfer an item to another lab
        > Required Permission Level: LAB_MANAGER
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value:
                  id: 35584289-6f39-48d4-9866-ef5d5ed8d846
                  labId: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
        description: item id and the labId of the new lab
      tags:
        - Items
  api/items/create:
    post:
      summary: Create an Item
      operationId: post-items-create
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    id: 6669559a-066c-461d-99b9-edaa98e5c413
                    serialNumber: '1234'
                    itemSetId: 522f596b-9ead-460f-a8f5-42e62b8983fe
                    labId: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                    attributes:
                      - key: price
                        value: '100'
        '400':
          description: Bad Request
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value:
                  id: df89ccaa-ee34-437b-9ae7-81c3c3e4aad0
                  serialNumber: '12344'
                  itemSetId: 522f596b-9ead-460f-a8f5-42e62b8983fe
                  labId: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                  attributes:
                    - key: price
                      value: '100'
      description: "Create an item \n> Required Permission Level: LAB_MANAGER or INVENTORY_MANAGER\nAny LAB_MANAGER can create items while only an INVENTORY_MANAGER assigned to a lab can create"
      security:
        - token: []
      tags:
        - Items
    parameters: []
  'api/items/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get an Item by ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    id: bda208d8-b83b-4d88-9451-08dcd3f7aa1c
                    serialNumber: '123'
                    ItemSet:
                      id: 522f596b-9ead-460f-a8f5-42e62b8983fe
                      title: transister2
                      image: imageurl
                    Lab:
                      id: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                      title: microsoft lab
                      subtitle: hello world
                      image: null
                    ItemAttributes:
                      - key: height
                        value: ''
                      - key: price
                        value: '100'
                      - key: rpm
                        value: '40'
                      - key: width
                        value: 50cm
      operationId: get-items-id
      requestBody: {}
      description: |-
        Get an item of a given ID
        > Required Permission Level: loggedIn
      security:
        - token: []
      tags:
        - Items
    delete:
      summary: Delete an Item by ID
      operationId: delete-items-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      description: |-
        Delete an item with a given ID
        > Required Permission Level:LAB_MANAGER
         or INVENTORY_MANAGER
      security:
        - token: []
      requestBody: {}
      tags:
        - Items
    patch:
      summary: Update an Item by Id
      operationId: patch-items-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    id: 35584289-6f39-48d4-9866-ef5d5ed8d846
                    serialNumber: '3456'
                    attributes:
                      - itemId: 35584289-6f39-48d4-9866-ef5d5ed8d846
                        key: height
                        value: '10'
                      - itemId: 35584289-6f39-48d4-9866-ef5d5ed8d846
                        key: rpm
                        value: '40'
                      - itemId: 35584289-6f39-48d4-9866-ef5d5ed8d846
                        key: width
                        value: 50cm
                      - itemId: 35584289-6f39-48d4-9866-ef5d5ed8d846
                        key: price
                        value: '100'
        '400':
          description: Bad Request
      description: |-
        Update an item with a given ID
        > Required Permission Level: LAB_MANAGER or INVENTORY_MANAGER
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value:
                  attributes:
                    - key: height
                      value: '10'
                    - key: price
                      value: '100'
        description: |-
          All the previous item attribute (key, value) pairs will be replaced by the new attributes. But the itemset attributes will remain unaltered. The editable itemset attributes can be altered as well
          "height": an editable itemset attr, "price": a new itemset attr.
      tags:
        - Items
  /api/users/list:
    get:
      summary: List Users
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    users:
                      - id: 1a9a899e-3619-41c3-840b-2b123ff68165
                        firstName: Amal
                        lastName: Amal
                        email: admin@admin.com
                        roleId: 23ffec9d-a531-431d-9f42-96aebff903fd
                        Role:
                          name: administrator
                      - id: 0ceeac00-e2d3-467b-8381-b38ae1d46b2e
                        firstName: kamal
                        lastName: kamal
                        email: kamal@gmail.com
                        roleId: 89727056-d8e8-4dca-a0ce-b1c8023aeeec
                        Role:
                          name: superrole
        '400':
          description: Bad Request
      operationId: get-users-list
      description: |-
        List all the users of the system
        > Required Permission Level: ADMINISTRATOR
      security:
        - token: []
    parameters: []
  '/api/users/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: Update a User by ID
      operationId: delete-users-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      description: |-
        Delete the user (Warning!!! User might still be able to be logged in if he already is)
        > Required Permission Level: ADMINISTRATOR
      security:
        - token: []
      tags:
        - Users
    patch:
      summary: Update a User by ID
      operationId: patch-users-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      description: |-
        Alter the firstname, lastname of a user (Warning!!! Might cause the JWT to become inconsistant with user details)
        > Required Permission Level: ADMINISTRATOR
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value:
                  firstName: Nimal
                  lastName: Perera
      tags:
        - Users
  '/api/labs/{id}/users':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get users assigned to a lab
      tags:
        - Labs
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    users:
                      id: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                      Users:
                        - id: 0ceeac00-e2d3-467b-8381-b38ae1d46b2e
                          firstName: Nimal
                          lastName: Perera
                          email: kamal@gmail.com
                          LabAssign:
                            labId: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                            userId: 0ceeac00-e2d3-467b-8381-b38ae1d46b2e
                            createdAt: '2020-04-08T10:41:58.049Z'
                            updatedAt: '2020-04-08T10:41:58.049Z'
        '400':
          description: Bad Request
      operationId: get-api-items-id-users
      description: |-
        Lists all the users who are assigned to a lab
        > Required Permission Level: loggedIn
      security:
        - token: []
  '/api/labs/{id}/items':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get items in a lab
      tags:
        - Labs
        - Items
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    labItems:
                      - id: 35584289-6f39-48d4-9866-ef5d5ed8d846
                        serialNumber: '3456'
                        labId: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                        itemSetId: 522f596b-9ead-460f-a8f5-42e62b8983fe
                        createdAt: '2020-04-08T05:40:46.960Z'
                        updatedAt: '2020-04-08T05:40:46.960Z'
                        ItemSet:
                          id: 522f596b-9ead-460f-a8f5-42e62b8983fe
                          title: transister2
                          image: null
                        status: ACCEPTED
                      - id: bda208d8-b83b-4d88-9451-08dcd3f7aa1c
                        serialNumber: '123'
                        labId: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                        itemSetId: 522f596b-9ead-460f-a8f5-42e62b8983fe
                        createdAt: '2020-04-08T06:04:52.810Z'
                        updatedAt: '2020-04-08T06:04:52.810Z'
                        ItemSet:
                          id: 522f596b-9ead-460f-a8f5-42e62b8983fe
                          title: transister2
                          image: null
                        status: BORROWED
                      - id: 6669559a-066c-461d-99b9-edaa98e5c413
                        serialNumber: '1234'
                        labId: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                        itemSetId: 522f596b-9ead-460f-a8f5-42e62b8983fe
                        createdAt: '2020-04-08T06:07:31.333Z'
                        updatedAt: '2020-04-08T06:07:31.333Z'
                        ItemSet:
                          id: 522f596b-9ead-460f-a8f5-42e62b8983fe
                          title: transister2
                          image: null
                        status: AVAILABLE
        '400':
          description: Bad Request
      operationId: get-api-labs-id-items
      description: |-
        Lists all the items in a lab
        > Required Permission Level: loggedIn
        The response contains the status of every item
        AVAILABLE - available for requesting.
        ACCEPTED - the supervisor has accepted a borrow request, requester has not borrowed.
        BORROWED - the item has been borrowed by a requester and has not returned yet.
      security:
        - token: []
  /api/labs/assign:
    parameters: []
    post:
      summary: Assign a user to a lab
      operationId: post-api-labs-assign
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      description: |-
        Assign a user to a lab
        > Required Permission Level: LAB_MANAGER
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value:
                  labId: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                  userId: 0ceeac00-e2d3-467b-8381-b38ae1d46b2e
      tags:
        - Labs
        - Users
  /api/labs/unassign:
    parameters: []
    post:
      summary: Unassign a user from a lab
      operationId: post-api-labs-unassign
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      description: |-
        Unassign a user from a lab
        > Required Permission Level: LAB_MANAGER
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value:
                  labId: 5bb28720-ceaa-40f9-854e-39b4d6ee67b6
                  userId: 0ceeac00-e2d3-467b-8381-b38ae1d46b2e
      tags:
        - Labs
        - Users
  /api/requestitems/create:
    post:
      summary: Create a item request
      operationId: post-api-requestitems-create
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    id: 2a626e25-6a64-48f2-8703-069e9557e5c8
                    labId: e99bf9fc-4e82-4740-95da-04f7922fc389
                    userId: 434fd31f-7a0a-41c7-8bce-d8a1cec996ed
                    supervisorId: 769d919a-39bb-47c1-8d23-35a8ad8efac4
                    reason: Testing what else
                    itemList:
                      - itemId: 66562194-ae7a-41b0-b5ea-ba957a513c74
                        requestId: 2a626e25-6a64-48f2-8703-069e9557e5c8
                        status: PENDING
                      - itemId: 840234fc-b955-453a-9780-9deea108abdd
                        requestId: 2a626e25-6a64-48f2-8703-069e9557e5c8
                        status: PENDING
        '400':
          description: Bad Request
      tags:
        - RequestItems
      description: |-
        Unassign a user from a lab
        > Required Permission Level: REQUESTER
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value:
                  itemIds:
                    - 66562194-ae7a-41b0-b5ea-ba957a513c74
                    - 840234fc-b955-453a-9780-9deea108abdd
                  labId: e99bf9fc-4e82-4740-95da-04f7922fc389
                  userId: 434fd31f-7a0a-41c7-8bce-d8a1cec996ed
                  supervisorId: 769d919a-39bb-47c1-8d23-35a8ad8efac4
                  reason: Testing what else
        description: ''
  '/api/requestitems/{token}':
    parameters:
      - schema:
          type: string
        name: token
        in: path
        required: true
    get:
      summary: GET item request using the token
      tags:
        - RequestItems
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    id: 9e1807c4-0252-4da4-9734-eba127caee30
                    labId: 1211ea53-ed14-44ca-9ef5-9ddbed9fd083
                    userId: d53d5fd0-9f9d-4676-9dd8-00f43f3dd232
                    supervisorId: 8cb18a70-5b9e-45af-82ba-e516b69aa227
                    reason: Testing what else
                    declineReason: null
                    supervisorToken: pQZYZX_ozWNiQ5Esw9Ltj58I70K5CT3GpCT_ZhVuv6T72tWk3Na23Eti4oFt1_ZoKtQ-sR4FRkH7fydK~PdCrUsn8bwMcB51
                    status: REQUESTED
                    createdAt: '2020-05-12T02:29:47.447Z'
                    updatedAt: '2020-05-12T02:29:47.447Z'
                    RequestItems:
                      - itemId: 2cafc0f3-d1e0-4a8e-9f16-f26e80ae7ee1
                        requestId: 9e1807c4-0252-4da4-9734-eba127caee30
                        returnedDate: null
                        dueDate: null
                        borrowedDate: null
                        status: PENDING
                        createdAt: '2020-05-12T02:29:47.478Z'
                        updatedAt: '2020-05-12T02:29:47.478Z'
                        Item:
                          id: 2cafc0f3-d1e0-4a8e-9f16-f26e80ae7ee1
                          serialNumber: '123356'
                          ItemSet:
                            id: fb1f7558-2cba-45e7-893c-75d75e99c38a
                            title: resister
                            image: null
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    message: 'Invalid token!'
      operationId: get-api-requestitems-token
      description: |-
        Get the details of a request(for supervisors)
        > Required Permission Level: NONE
  /api/requestitems/review:
    post:
      summary: Post review details(Accept/Reject)
      operationId: post-api-requestitems-review
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    message: 'Expired request!'
      description: |-
        Post review details(Accept/Reject)
        value = true if accept, false othervise
        If value = true, declineReason should be null.
        If value = false, declineReason can be null or a string.
        **But declineReason is a required field
        > Required Permission Level: NONE
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value:
                  token: ~4JPw33Se~322Y376cFmFuxM_24IYKNylEjvgvX_VBaQQX0aGMd8Hpb9IDbrKigUykpJzEktJuMyn9HR7z3Qs.vm_8stnj08
                  value: true
                  declineReason: null
      tags:
        - RequestItems
components:
  schemas:
    Role:
      title: Role
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        permissions:
          type: array
          items: {}
      required:
        - id
        - name
        - permissions
      description: |-
        name should be unique.
        permissions should be an array with the role permissions that are provided. To find the permissions use GET /api/permissions/roles
        The permissions array should contain at least one permission
      x-examples:
        example-1: {}
    Error:
      title: Error
      type: object
      properties:
        message:
          type: string
          description: Error Message
      required:
        - message
      x-examples: {}
      description: ''
    Registration-Role-Assign:
      title: Registration Token Generation Request
      type: object
      x-examples: {}
      description: ''
      properties:
        email:
          type: string
          description: Email address to be sent the registration token
          format: email
        role:
          type: string
          description: Initial role for the account created by email address
          format: uuid
      required:
        - email
        - role
    User:
      title: User
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        permissions:
          type: array
          items:
            type: string
        role:
          type: string
        roleId:
          type: string
          format: uuid
      required:
        - id
        - firstName
        - lastName
        - email
        - permissions
        - role
        - roleId
    Lab:
      title: Lab
      type: object
      description: Lab Object
      x-examples: {}
      properties:
        id:
          type: string
          format: uuid
          description: Id of the lab
        title:
          type: string
          description: Title of the lab
        subtitle:
          type: string
          description: Subtitle of the lab
        image:
          type: string
          description: Image URL of the lab
          format: uri
        updatedAt:
          type: string
          format: date-time
          description: Object creation date
        createdAt:
          type: string
          format: date-time
          description: Object last update date
      required:
        - id
        - title
        - subtitle
    LabRequest:
      title: Lab Request
      type: object
      description: Lab Object used to request creation/updating
      properties:
        title:
          type: string
          description: Title of the lab
        subtitle:
          type: string
          description: Subtitle of the lab
        image:
          type: string
          description: Image URL of the lab
          format: uri
      required:
        - title
        - subtitle
      x-examples: {}
    RoleRequest:
      title: RoleRequest
      type: object
      properties:
        name:
          type: string
        permissions:
          type: array
          items: {}
      required:
        - name
        - permissions
      description: |-
        name should be unique.
        permissions should be an array with the role permissions that are provided. To find the permissions use GET /api/permissions/roles
        The permissions array should contain at least one permission
      x-examples:
        example-1: {}
    attribute:
      title: attribute
      type: object
      description: 'key, editable, defaultValue are required. defaultValue can be null iff editable is true'
      x-examples: {}
      properties:
        key:
          type: string
        editable:
          type: boolean
        defaultValue:
          type: string
      required:
        - key
        - editable
        - defaultValue
    ItemSet:
      title: ItemSet
      type: object
      x-examples:
        example-1:
          id: fd2851f9-4f53-4201-9d72-0e1cc168e341
          title: periscope
          image: 'https://mail.google.com/mail/u/0/?tab=wm&ogbl'
          attributes:
            - key: weight
              editable: false
              defaultValue: 500g
            - key: height
              editable: true
              defaultValue: 50cm
            - key: rpm
              editable: true
              defaultValue: null
      properties:
        id:
          type: string
        title:
          type: string
        image:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/attribute'
      required:
        - id
        - title
        - image
        - attributes
      description: 'key, editable, defaultValue are required. defaultValue can be null iff editable is true'
    Item:
      title: Item
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              serialNumber:
                type: string
              ItemSet:
                $ref: '#/components/schemas/ItemSet'
              Lab:
                $ref: '#/components/schemas/Lab'
  securitySchemes:
    token:
      name: token
      type: apiKey
      in: header
      description: JWT Token for the user
tags:
  - name: Registration
  - name: Login
  - name: Registrar
  - name: Labs
  - name: Role
  - name: Itemset
  - name: Items
  - name: Users
  - name: RequestItems
